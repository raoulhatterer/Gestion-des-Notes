#+STARTUP: inlineimages
#+LANGUAGE: fr
#+LATEX_HEADER: \usepackage[AUTO]{babel}
#+LaTeX_HEADER: \usepackage[x11names]{xcolor}
#+LaTeX_HEADER: \hypersetup{linktoc = all, colorlinks = true, urlcolor = DodgerBlue4, citecolor = PaleGreen1, linkcolor = black}
#+TITLE: Gestion des notes 
#+SUBTITLE: (Projet DIU)
#+OPTIONS: toc:2  
#+AUTHOR: Raoul HATTERER

# This is an org-mode document with litterate programming
# C-' to edit the code bloc
# C-c C-c to execute the code bloc
# M-x org-redisplay-inline-images (C-c C-x C-M-v) will refresh in-lined image if needed.
# C-c C-x C-v toggle preview
# C-c C-o to follow link
#  C-c C , s to insert a src block.
# C-c C-v t tangle the current file

# La première page contient le titre et la table des matières
#+LATEX: \newpage


* Installations et paramétrages
  *Remarque*: Certaines parties concernent plus spécifiquement mon utilisation personnelle avec [[https://emacsformacosx.com][emacs sous OSX]].

** Installer Homebrew

   Pour installer MariaDB, il faut disposer de [[https://brew.sh/index_fr][Homebrew]] (The Missing Package Manager for macOS).

** Installer MariaDB

   MariaDB Server peut ensuite être installé grâce à cette commande:

   #+NAME: mariadbinstallation
   #+ATTR_LATEX: :options frame=single, label = \textrm{\textbf{shell}}, labelposition = topline, samepage = t
   #+BEGIN_SRC shell
     brew update
     brew install mariadb
   #+END_SRC

** Démarrer MariaDB Server
   Après installation, on peut (mais on ne va pas le faire) démarrer le serveur avec la commande:
   #+NAME: mariadbstart
   #+ATTR_LATEX: :options frame=single, label = \textrm{\textbf{shell}}, labelposition = topline, samepage = t
   #+BEGIN_SRC shell
     mysql.server start
   #+END_SRC
   
   Il est plus commode d'activer le démarrage automatique du serveur:

   #+NAME: mariadbautostart
   #+ATTR_LATEX: :options frame=single, label = \textrm{\textbf{shell}}, labelposition = topline, samepage = t
   #+BEGIN_SRC shell
     brew services start mariadb
   #+END_SRC

** Vérifier que MariaDB a démarré

   #+NAME: serviceslist
   #+ATTR_LATEX: :options frame=single, label = \textrm{\textbf{shell}}, labelposition = topline, samepage = t
   #+BEGIN_SRC shell
     brew services list
   #+END_SRC

** Client-serveur

   Comme la plupart des SGBD ([S]ystème de [G]estion de [B]ase de [D]onnées), MariaDB est basée sur le *modèle client-serveur*. Cela implique que la base de données se trouve sur un *serveur* auquel nous n'avons pas accès directement. Il faut passer par un *client* qui fera la liaison entre nous et le serveur.

   Donc, maintenant que  MariaDB Server a démarré, on va s'y connecter en utilisant un logiciel client (nommé ~mysql~)... mais sous quelle identité et avec quels droits?

** Distinguer les utilisateurs

*** Types d'utilisateurs

    Il faut distinguer trois types d'utilisateur d'un SGBD ayant chacun des rôles bien distincts :
    1. L'*administrateur* du SGBD et donc des Bases de Données. Il s'appelle ~root~. Son rôle est d'installer et gérer le SGBD dans sa globalité. Chaque fois que l'administrateur crée une base de données, il délègue sa gestion à un autre utilisateur à qui il donne les droits nécessaires. *Remarque:*  Il ne faut pas travailler sur une bases de données en tant que ~root~; ce n'est pas son rôle ([[https://www.youtube.com/watch?v=oiQG6tP3940][c'est mal]]).
    2. Le *gestionnaire* de Bases de Données (dans un SGBD existant) qui doit connaître  *sql* (Structured Query Language) : création (CREATE TABLE), modification (ALTER TABLE), suppression (DROP TABLE) de tables...     
    3. L'*utilisateur* de bases de données (il va interagir avec la base de donnée à travers une application se voulant conviviale; il n'a pas à connaître *sql*).



*** À la création

   *À la création, la base de donnée est initialisée avec 2 comptes:* 
- le premier correspond au nom d'utilisateur actuel (checké avec la commande ~whoami~); il ne nécessite pas de mot de passe;
- tandis que le second est le compte administrateur ~root~ ; il est inaccessible tant qu'on n'a pas défini de mot de passe.

On va donc faire ce qu'il faut pour activer l'accès au compte administrateur (root) puis s'y connecter pour créer une base de données (~bd_gestion_des_notes~) et un compte gestionnaire.  

*** Activer l'accès au compte ~root~
    
    Pour cela, d'abord se connecter au client *mysql*  avec son nom d'utilisateur:

    #+NAME: whoam
    #+ATTR_LATEX: :options frame=single, label = \textrm{\textbf{shell}}, labelposition = topline, samepage = t
    #+BEGIN_SRC shell
      mysql -u $(whoami)
    #+END_SRC
    
    Puis, grâce au commandes du client *mysql*, définir le mot de passe de ~root~:
 
    #+NAME: setrootpwd
    #+ATTR_LATEX: :options frame=single, label = \textrm{\textbf{sql}}, labelposition = topline, samepage = t
    #+BEGIN_SRC sql
      SHOW databases;
      USE mysql;
      SET password FOR 'root'@'localhost' = 
      password('YOUR_ROOT_PASSWORD_HERE');
      FLUSH PRIVILEGES;
      quit
    #+END_SRC

    où ~YOUR_ROOT_PASSWORD_HERE~ est à remplacer par le mot de passe souhaité.

** Création d'une nouvelle base de données et d'un gestionnaire pour assurer sa gestion 

*** Login en tant que ~root~  

    Maintenant, nous pouvons nous connecter en tant que ~root~:

   #+NAME: loginrootpwd
   #+ATTR_LATEX: :options frame=single, label = \textrm{\textbf{shell}}, labelposition = topline, samepage = t
   #+BEGIN_SRC shell
     mysql -u root -p
   #+END_SRC

   Il faudra fournir le mot de passe renseigné à l'étape précédente.

*** Commandes de base à la disposition de l'administrateur

   - Afficher le statut du serveur:\\
 
     #+NAME: showstatus
     #+ATTR_LATEX: :options frame=single, label = \textrm{\textbf{sql}}, labelposition = topline, samepage = t
     #+BEGIN_SRC sql
       SHOW STATUS;
     #+END_SRC

   - Créer une nouvelle base de données:\\

     #+NAME: createdatabase2
     #+ATTR_LATEX: :options frame=single, label = \textrm{\textbf{sql}}, labelposition = topline, samepage = t
     #+BEGIN_SRC sql
       CREATE DATABASE nom_database;
     #+END_SRC

   - Lister les bases de données:\\

     #+NAME: showdatabases
     #+ATTR_LATEX: :options frame=single, label = \textrm{\textbf{sql}}, labelposition = topline, samepage = t
     #+BEGIN_SRC sql
       SHOW DATABASES;
     #+END_SRC

   - Effacer une base de donnée:\\
 
     #+NAME: dropdatabase
     #+ATTR_LATEX: :options frame=single, label = \textrm{\textbf{sql}}, labelposition = topline, samepage = t
     #+BEGIN_SRC sql
       DROP DATABASE nom_database;
     #+END_SRC





*** Création de la nouvelle base de données =bd_gestion_des_notes=:
    #+NAME: createdatabase
    #+ATTR_LATEX: :options frame=single, label = \textrm{\textbf{sql}}, 
    #+BEGIN_SRC sql
      CREATE DATABASE bd_gestion_des_notes;
      SHOW DATABASES;
    #+END_SRC

*** Création d'un utilisateur =gestionnaire=
    Utilisateur à qui ~root~ va donner les droits nécessaires pour créer ou modifier des tables dans la base de données =bd_gestion_des_notes= ou pour inscrire des utilisateurs
    #+NAME: createusergestionnaire
    #+ATTR_LATEX: :options frame=single, label = \textrm{\textbf{sql}}, 
    #+BEGIN_SRC sql
      CREATE USER user_gestionnaire@localhost
      IDENTIFIED BY 'gestionnaire';
      GRANT ALL PRIVILEGES ON bd_gestion_des_notes.* 
      TO user_gestionnaire@localhost;
      quit
    #+END_SRC		

*** Effacer l'utilisateur =gestionnaire=

    #+NAME: createusergestionnaire
    #+ATTR_LATEX: :options frame=single, label = \textrm{\textbf{sql}}, 
    #+BEGIN_SRC sql
      DROP USER user_gestionnaire@localhost;
    #+END_SRC		


* Afficher les utilisateurs
** Afficher tous les utilisateurs (en tant qu'administrateur)

   Connecté en ~root~ saisir la commande:
   #+NAME: showallusers
   #+ATTR_LATEX: :options frame=single, label = \textrm{\textbf{sql}}, 
   #+BEGIN_SRC sql
     select host, user from mysql.user;
   #+END_SRC

** Afficher l'utilisateur connecté

   Deux commandes possibles pour cela:
   #+NAME: showcurrentuser
   #+ATTR_LATEX: :options frame=single, label = \textrm{\textbf{sql}}, 
   #+BEGIN_SRC sql
     SELECT current_user;
   #+END_SRC

   ou 

   #+NAME: showcurrentuser2
   #+ATTR_LATEX: :options frame=single, label = \textrm{\textbf{sql}}, 
   #+BEGIN_SRC sql
     SELECT user();
   #+END_SRC


* Gestion de la base de données

** Se connecter au client ~mysql~ en tant que gestionnaire

   #+NAME: connectgestionnaire
   #+ATTR_LATEX: :options frame=single, label = \textrm{\textbf{sql}}, 
   #+BEGIN_SRC sql
     mysql -u user_gestionnaire -p
   #+END_SRC

   Saisir le mot de passe précédemment défini. 


** Lister les bases de données (auxquelles le gestionnaire a accès)

   #+NAME: showdatabases2
   #+ATTR_LATEX: :options frame=single, label = \textrm{\textbf{sql}}, 
   #+BEGIN_SRC sql
     SHOW DATABASES;
   #+END_SRC

** Se connecter à une base de données
   Pour utiliser la base de donnée ~bd_gestion_des_notes~:
 
   #+NAME: usebd_gestion_des_notes
   #+ATTR_LATEX: :options frame=single, label = \textrm{\textbf{sql}}, 
   #+BEGIN_SRC sql
     USE bd_gestion_des_notes;      
   #+END_SRC

** Afficher les tables de la base courante

   #+NAME: showtables
   #+ATTR_LATEX: :options frame=single, label = \textrm{\textbf{sql}}, 
   #+BEGIN_SRC sql
     SHOW TABLES;
   #+END_SRC

** Afficher la structure de la table

   #+NAME: describetable
   #+ATTR_LATEX: :options frame=single, label = \textrm{\textbf{sql}}, 
  #+BEGIN_SRC sql
    DESCRIBLE nom_table;
  #+END_SRC

** Créer une nouvelle table

   #+NAME: createtable
   #+ATTR_LATEX: :options frame=single, label = \textrm{\textbf{sql}}, 
   #+BEGIN_SRC sql
     CREATE TABLE nom_table (
     nom_colonne1 int,
     nom_colonne2 VARCHAR(100)
     );
   #+END_SRC
 
** Ajouter une colonne à une table
   #+NAME: addcolumn
   #+ATTR_LATEX: :options frame=single, label = \textrm{\textbf{sql}}, 
   #+BEGIN_SRC sql
     ALTER TABLE nom_table ADD nom_colonne type_colonne;
   #+END_SRC
 
** Effacer une colonne
   #+NAME: deletecolumn
   #+ATTR_LATEX: :options frame=single, label = \textrm{\textbf{sql}}, 
   #+BEGIN_SRC sql 
     ALTER TABLE nom_table DROP COLUMN nom_colonne;
   #+END_SRC
 
** Effacer une table
   #+NAME: deletetable
   #+ATTR_LATEX: :options frame=single, label = \textrm{\textbf{sql}}, 
   #+BEGIN_SRC sql
     DROP nom_table;
   #+END_SRC
 
** Afficher le contenu de la table
   #+NAME: showtable
   #+ATTR_LATEX: :options frame=single, label = \textrm{\textbf{sql}}, 
   #+BEGIN_SRC sql
     SELECT * FROM nom_table;
   #+END_SRC


* sql-mode dans emacs

** Se connecter au client ~mysql~ dans emacs

   Utiliser la commande: ~M-x sql-mysql~

   Renseigner:
   - User: ~user_gestionnaire~
   - Password: ~gestionnaire~
   - Database : (ne rien mettre)
   - Server: ~localhost~

** Si emacs ne trouve pas le programme mysql
   - Déterminer l'emplacement de ~mysql~ avec la commande:
   #+NAME: whishsql
   #+ATTR_LATEX: :options frame=single, label = \textrm{\textbf{shell}}, 
   #+BEGIN_SRC shell
     which mysql
   #+END_SRC
   qui retourne ~/usr/local/bin/mysql~

   - modifier ~.emacs.d/init.el~
   
   Emacs recherche les programmes dans les répertoires listés dans la variable ~exec-path~. On va ajouter  ~/usr/local/bin~ à cette variable.

   #+NAME: execpath
   #+ATTR_LATEX: :options frame=single, label = \textrm{\textbf{elisp}}, 
   #+BEGIN_SRC elisp
     (add-to-list 'exec-path "/usr/local/bin")
   #+END_SRC

** Connexion facilitée 
   À placer dans ~.emacs.d/init.el~
   #+NAME: connexionfacile
   #+ATTR_LATEX: :options frame=single, label = \textrm{\textbf{elisp}}, 
   #+BEGIN_SRC elisp
     (setq sql-user "user_gestionnaire")
     (setq sql-database "bd_gestion_des_notes")
     (setq sql-server "localhost")
   #+END_SRC

   Connexion acilitée, toujours avec la commande ~M-x sql-mysql~ et dorénavant il ne reste plus qu'à saisir le mot de passe utilisateur (en l'occurrence: ~gestionnaire~); le reste étant renseigné à l'avance.

** SQLUP-MODE

   Capitalise les mots clés sql.

   Les lignes suivantes sont  à placer dans le fichier ~init.el~:

   #+NAME: sqlup
   #+ATTR_LATEX: :options frame=single, label = \textrm{\textbf{elisp}}, 
   #+BEGIN_SRC elisp
     (use-package sqlup-mode
       :ensure t
       :config
       (add-hook 'sql-mode-hook 'sqlup-mode)
       (add-hook 'sql-interactive-mode-hook 'sqlup-mode)
       (add-hook 'redis-mode-hook 'sqlup-mode)
       )
   #+END_SRC


* How to run sql script

  If you’re at the MySQL command line mysql> you have to declare the SQL file as source.

  #+BEGIN_SRC sql
    mysql> source \path\to\the\script_file.sql;
  #+END_SRC

  For example:

  #+BEGIN_SRC sql
    mysql> source \home\user\Desktop\script_file.sql;
  #+END_SRC


* Python tkinter table widget for displaying tabular data

** installation
  #+BEGIN_SRC shell
    pip install tksheet
  #+END_SRC

** source
  https://github.com/ragardner/tksheet

** paramètres
   https://github.com/ragardner/tksheet/blob/master/DOCUMENTATION.md

** fonctions
   https://github.com/ragardner/tksheet/blob/master/tksheet/_tksheet.py
