#+STARTUP: inlineimages
#+LANGUAGE: fr
#+LATEX_HEADER: \usepackage[AUTO]{babel}
#+LaTeX_HEADER: \usepackage[x11names]{xcolor}
#+LaTeX_HEADER: \hypersetup{linktoc = all, colorlinks = true, urlcolor = DodgerBlue4, citecolor = PaleGreen1, linkcolor = black}
#+TITLE: Gestion des notes 
#+SUBTITLE: (Projet DIU)
#+OPTIONS: toc:2  
#+AUTHOR: Raoul HATTERER

# This is an org-mode document with litterate programming
# C-' to edit the code bloc
# C-c C-c to execute the code bloc
# M-x org-redisplay-inline-images (C-c C-x C-M-v) will refresh in-lined image if needed.
# C-c C-x C-v toggle preview
# C-c C-o to follow link
#  C-c C , s to insert a src block.
# C-c C-v t tangle the current file

# La première page contient le titre et la table des matières
#+LATEX: \newpage


* Installation et démarrage du serveur MariaDB 
  *Remarque*: Certaines parties concernent plus spécifiquement mon utilisation personnelle avec [[https://emacsformacosx.com][emacs sous OSX]].

** Installer Homebrew

   Pour installer MariaDB, il faut disposer de [[https://brew.sh/index_fr][Homebrew]] (The Missing Package Manager for macOS).

** Installer MariaDB

   MariaDB Server peut ensuite être installé grâce à cette commande (à taper dans le =Terminal=):

   #+NAME: mariadbinstallation
   #+ATTR_LATEX: :options frame=single, label = \textrm{\textbf{shell}}, labelposition = topline, samepage = t
   #+BEGIN_SRC shell
     brew update
     brew install mariadb
   #+END_SRC

** Démarrer MariaDB Server
   Après installation, on peut (mais on ne va pas le faire) démarrer le serveur avec la commande:
   #+NAME: mariadbstart
   #+ATTR_LATEX: :options frame=single, label = \textrm{\textbf{shell}}, labelposition = topline, samepage = t
   #+BEGIN_SRC shell
     mysql.server start
   #+END_SRC
   
   Il est plus commode d'activer le démarrage automatique du serveur:

   #+NAME: mariadbautostart
   #+ATTR_LATEX: :options frame=single, label = \textrm{\textbf{shell}}, labelposition = topline, samepage = t
   #+BEGIN_SRC shell
     brew services start mariadb
   #+END_SRC

** Vérifier que MariaDB a démarré

   #+NAME: serviceslist
   #+ATTR_LATEX: :options frame=single, label = \textrm{\textbf{shell}}, labelposition = topline, samepage = t
   #+BEGIN_SRC shell
     brew services list
   #+END_SRC

   Cette commande doit retourner =mariadb started=.


* Connexion au serveur à travers le client ~mysql~ 

** Client-serveur

   Comme la plupart des SGBD ([S]ystème de [G]estion de [B]ase de [D]onnées), MariaDB est basée sur le *modèle client-serveur*. Cela implique que la base de données se trouve sur un *serveur* auquel nous n'avons pas accès directement. Il faut passer par un *client* qui fera la liaison entre nous et le serveur.

   Donc, maintenant que  MariaDB Server a démarré, on va s'y connecter en utilisant un logiciel client (nommé ~mysql~)... mais sous quelle identité et avec quels droits?

** À la création, la base de donnée est initialisée avec 2 comptes
- Le premier compte correspond au nom d'utilisateur actuel (checké avec la commande ~whoami~); il ne nécessite pas de mot de passe;
- Le second est le compte administrateur ~root~ ; il est inaccessible tant qu'on n'a pas défini de mot de passe.

On va donc faire ce qu'il faut pour activer l'accès au compte administrateur (root) puis s'y connecter pour créer une base de données (~bd_gestion_des_notes~).


** Activer l'accès au compte ~root~

    
   Pour cela, d'abord se connecter au client *mysql*  avec son nom d'utilisateur:

   #+NAME: whoam
   #+ATTR_LATEX: :options frame=single, label = \textrm{\textbf{shell}}, labelposition = topline, samepage = t
   #+BEGIN_SRC shell
     mysql -u $(whoami)
   #+END_SRC
    
   Puis, grâce au commandes du client *mysql*, définir le mot de passe de ~root~:
 
   #+NAME: setrootpwd
   #+ATTR_LATEX: :options frame=single, label = \textrm{\textbf{sql}}, labelposition = topline, samepage = t
   #+BEGIN_SRC sql
     SHOW databases;
     USE mysql;
     SET password FOR 'root'@'localhost' = 
     password('YOUR_ROOT_PASSWORD_HERE');
     FLUSH PRIVILEGES;
     quit
   #+END_SRC

   où ~YOUR_ROOT_PASSWORD_HERE~ est à remplacer par le mot de passe souhaité.



* Création par ~root~ d'une nouvelle base de données et d'un gestionnaire pour assurer sa gestion 

** Login en tant que ~root~  

   Maintenant, nous pouvons nous connecter en tant que ~root~:

  #+NAME: loginrootpwd
  #+ATTR_LATEX: :options frame=single, label = \textrm{\textbf{shell}}, labelposition = topline, samepage = t
  #+BEGIN_SRC shell
    mysql -u root -p
  #+END_SRC

  Il faudra fournir le mot de passe renseigné à l'étape précédente.

** Création de la nouvelle base de données =bd_gestion_des_notes=:
   #+NAME: createdatabase
   #+ATTR_LATEX: :options frame=single, label = \textrm{\textbf{sql}}, 
   #+BEGIN_SRC sql
     CREATE DATABASE bd_gestion_des_notes;
     SHOW DATABASES;
   #+END_SRC

   où:
  #+NAME: createdatabase2
    #+ATTR_LATEX: :options frame=single, label = \textrm{\textbf{sql}}, labelposition = topline, samepage = t
    #+BEGIN_SRC sql
      CREATE DATABASE nom_database;
    #+END_SRC

  permet de créer une nouvelle base de données et:

    #+NAME: showdatabases
    #+ATTR_LATEX: :options frame=single, label = \textrm{\textbf{sql}}, labelposition = topline, samepage = t
    #+BEGIN_SRC sql
      SHOW DATABASES;
    #+END_SRC
permet d'afficher la liste des bases de données.

Si l'on souhaite effacer une base de donnée:\\
 
    #+NAME: dropdatabase
    #+ATTR_LATEX: :options frame=single, label = \textrm{\textbf{sql}}, labelposition = topline, samepage = t
    #+BEGIN_SRC sql
      DROP DATABASE nom_database;
    #+END_SRC



** Types d'utilisateurs d'un SGBP

   De façon générale, trois types d'*utilisateurs* ayant chacun des *rôles* bien distincts sont à distinguer :
   1. *L'administrateur* du SGBD et donc des Bases de Données. Il s'appelle ~root~. Son rôle est d'installer et gérer le SGBD dans sa globalité. Chaque fois que l'administrateur crée une base de données, il délègue sa gestion à un autre utilisateur à qui il donne les droits nécessaires. *Remarque:*  Il ne faut pas travailler sur une bases de données en tant que ~root~; ce n'est pas son rôle ([[https://www.youtube.com/watch?v=oiQG6tP3940][c'est mal]]).
   2. *Le gestionnaire* de Bases de Données (dans un SGBD existant) qui doit connaître  *sql* (Structured Query Language) : création (CREATE TABLE), modification (ALTER TABLE), suppression (DROP TABLE) de tables...     
   3. *L'utilisateur final* de la base de donnée. Il va interagir avec tout ou partie de la base de donnée à travers une application se voulant conviviale; il n'a pas à connaître *sql*.


Le SGBD permet de créer différents utilisateurs avec des droits spécifiques, mais il permet aussi de créer différents rôles correspondant à des droits spécifiques ce qui rend la gestion d'utilisateurs ayant des droits identiques plus efficace.

** Création d'un utilisateur =gestionnaire=
   Utilisateur à qui ~root~ va donner les droits nécessaires pour créer ou modifier des tables dans la base de données =bd_gestion_des_notes= ou pour inscrire des utilisateurs.


*** Méthode 1

    On pourrait procéder ainsi: 

   #+NAME: createusergestionnaire
   #+ATTR_LATEX: :options frame=single, label = \textrm{\textbf{sql}},  labelposition = topline, samepage = t
   #+BEGIN_SRC sql
     CREATE USER user_gestionnaire@localhost
     IDENTIFIED BY 'gestionnaire';
     GRANT ALL PRIVILEGES ON bd_gestion_des_notes.* 
     TO user_gestionnaire@localhost;
     quit
   #+END_SRC		


   Se connecter au client ~mysql~ en tant que gestionnaire

   #+NAME: connectgestionnaire
   #+ATTR_LATEX: :options frame=single, label = \textrm{\textbf{sql}},  labelposition = topline, samepage = t
   #+BEGIN_SRC sql
     mysql -u user_gestionnaire -p
   #+END_SRC

   Saisir le mot de passe précédemment défini. 


   Mais nous allons plutôt employer la seconde méthode (voir [[*Méthode 2]] ).

   Mais, en tant que ~root~, commençons par effacer (si besoin) l'utilisateur =gestionnaire= :\\

   #+NAME: dropusergestionnaire
   #+ATTR_LATEX: :options frame=single, label = \textrm{\textbf{sql}},  labelposition = topline, samepage = t
   #+BEGIN_SRC sql
     DROP USER user_gestionnaire@localhost;
   #+END_SRC		


*** Méthode 2

    - Création du rôle de gestionnaire

    #+NAME: createrolegestionnaire
    #+ATTR_LATEX: :options frame=single, label = \textrm{\textbf{sql}},  labelposition = topline, samepage = t
    #+BEGIN_SRC sql
      CREATE OR replace ROLE role_gestionnaire;
      GRANT ALL 
      ON bd_gestion_des_notes.* 
      TO role_gestionnaire;
    #+END_SRC

    - Si le "stil" et le "proviseur" sont habilités à endosser ce rôle

    #+NAME: createusersgestionnaire
    #+ATTR_LATEX: :options frame=single, label = \textrm{\textbf{sql}},  labelposition = topline, samepage = t
    #+BEGIN_SRC sql
      CREATE OR replace USER  stil@localhost IDENTIFIED BY 'stilstil';                 
      GRANT role_gestionnaire
      TO stil@localhost;
      SET DEFAULT ROLE role_gestionnaire FOR stil@localhost;

      CREATE OR replace USER  proviseur@localhost IDENTIFIED BY 'propro';                 
      GRANT role_gestionnaire
      TO proviseur@localhost;
      SET DEFAULT ROLE role_gestionnaire FOR proviseur@localhost;
    #+END_SRC  

    - Pour vérifier le rôle de l'utilisateur connecté:
    #+NAME: verifierrole
    #+ATTR_LATEX: :options frame=single, label = \textrm{\textbf{sql}},  labelposition = topline, samepage = t
    #+BEGIN_SRC sql
      SELECT CURRENT_ROLE();      
    #+END_SRC


** Mot de passe et sécurité
Les mots de passe précédents seront à utiliser lors de la première connexion. Ensuite, pour des raisons évidentes de sécurité, les utilisateurs doivent se voir proposer un moyen de changer leur mot de passe. 

La commande sql est la suivante:
    #+NAME: changerpwd
    #+ATTR_LATEX: :options frame=single, label = \textrm{\textbf{sql}},  labelposition = topline, samepage = t
    #+BEGIN_SRC sql
      SET PASSWORD FOR 'proviseur'@'localhost' = PASSWORD('pro');
    #+END_SRC

Mais l'utilisateur final de la BD n'a pas à connaître sql c'est donc à l'application de proposer cette possibilité.


* Afficher les utilisateurs
** Afficher tous les utilisateurs (en tant qu'administrateur)

   Connecté en ~root~ saisir la commande:
   #+NAME: showallusers
   #+ATTR_LATEX: :options frame=single, label = \textrm{\textbf{sql}},  labelposition = topline, samepage = t
   #+BEGIN_SRC sql
     select host, user from mysql.user;
   #+END_SRC

** Afficher l'utilisateur connecté

   Deux commandes possibles pour cela:
   #+NAME: showcurrentuser
   #+ATTR_LATEX: :options frame=single, label = \textrm{\textbf{sql}},  labelposition = topline, samepage = t
   #+BEGIN_SRC sql
     SELECT current_user;
   #+END_SRC

   ou 

   #+NAME: showcurrentuser2
   #+ATTR_LATEX: :options frame=single, label = \textrm{\textbf{sql}},  labelposition = topline, samepage = t
   #+BEGIN_SRC sql
     SELECT user();
   #+END_SRC


* Gestion de la base de données


** Lister les bases de données (auxquelles le gestionnaire a accès)

   #+NAME: showdatabases2
   #+ATTR_LATEX: :options frame=single, label = \textrm{\textbf{sql}},  labelposition = topline, samepage = t
   #+BEGIN_SRC sql
     SHOW DATABASES;
   #+END_SRC

** Se connecter à une base de données
   Pour utiliser la base de donnée ~bd_gestion_des_notes~:
 
   #+NAME: usebd_gestion_des_notes
   #+ATTR_LATEX: :options frame=single, label = \textrm{\textbf{sql}},  labelposition = topline, samepage = t
   #+BEGIN_SRC sql
     USE bd_gestion_des_notes;      
   #+END_SRC

** Afficher les tables de la base courante

   #+NAME: showtables
   #+ATTR_LATEX: :options frame=single, label = \textrm{\textbf{sql}},  labelposition = topline, samepage = t
   #+BEGIN_SRC sql
     SHOW TABLES;
   #+END_SRC

** Afficher la structure de la table

   #+NAME: describetable
   #+ATTR_LATEX: :options frame=single, label = \textrm{\textbf{sql}},  labelposition = topline, samepage = t
  #+BEGIN_SRC sql
    DESCRIBE nom_table;
  #+END_SRC

** Créer une nouvelle table

   #+NAME: createtable
   #+ATTR_LATEX: :options frame=single, label = \textrm{\textbf{sql}},  labelposition = topline, samepage = t
   #+BEGIN_SRC sql
     CREATE TABLE nom_table (
     nom_colonne1 int,
     nom_colonne2 VARCHAR(100)
     );
   #+END_SRC
 
** Ajouter une colonne à une table
   #+NAME: addcolumn
   #+ATTR_LATEX: :options frame=single, label = \textrm{\textbf{sql}},  labelposition = topline, samepage = t
   #+BEGIN_SRC sql
     ALTER TABLE nom_table ADD nom_colonne type_colonne;
   #+END_SRC
 
** Effacer une colonne
   #+NAME: deletecolumn
   #+ATTR_LATEX: :options frame=single, label = \textrm{\textbf{sql}},  labelposition = topline, samepage = t
   #+BEGIN_SRC sql 
     ALTER TABLE nom_table DROP COLUMN nom_colonne;
   #+END_SRC
 
** Effacer une table
   #+NAME: deletetable
   #+ATTR_LATEX: :options frame=single, label = \textrm{\textbf{sql}},  labelposition = topline, samepage = t
   #+BEGIN_SRC sql
     DROP nom_table;
   #+END_SRC
 
** Afficher le contenu de la table
   #+NAME: showtable
   #+ATTR_LATEX: :options frame=single, label = \textrm{\textbf{sql}},  labelposition = topline, samepage = t
   #+BEGIN_SRC sql
     SELECT * FROM nom_table;
   #+END_SRC


* SQL avec emacs

** Se connecter au client ~mysql~ dans emacs

   Utiliser la commande: ~M-x sql-mysql~

   Renseigner (avec par exemple):
   - User: ~stil~
   - Password: ~stilstil~
   - Database : (ne rien mettre)
   - Server: ~localhost~

** Si emacs ne trouve pas le programme mysql
   - Déterminer l'emplacement de ~mysql~ avec la commande:
   #+NAME: whishsql
   #+ATTR_LATEX: :options frame=single, label = \textrm{\textbf{shell}},  labelposition = topline, samepage = t
   #+BEGIN_SRC shell
     which mysql
   #+END_SRC
   qui retourne ~/usr/local/bin/mysql~

   - modifier ~.emacs.d/init.el~

   #+NAME: execpath
   #+ATTR_LATEX: :options frame=single, label = \textrm{\textbf{elisp}},  labelposition = topline, samepage = t
   #+BEGIN_SRC elisp
     (add-to-list 'exec-path "/usr/local/bin")
   #+END_SRC

   Emacs recherche les programmes dans les répertoires listés dans la variable ~exec-path~. On a ajouté  ~/usr/local/bin~ à cette variable.

** Faciliter la connexion 
   À placer dans ~.emacs.d/init.el~
   #+NAME: connexionfacile
   #+ATTR_LATEX: :options frame=single, label = \textrm{\textbf{elisp}},  labelposition = topline, samepage = t
   #+BEGIN_SRC elisp
     (use-package sql
       :ensure t
       :config
       (sql-set-product-feature 'mysql :prompt-regexp 
                      "^\\(MariaDB\\|MySQL\\) \\[[_a-zA-Z]*\\]> ")
       (setq sql-user "user_gestionnaire")
       (setq sql-database "bd_gestion_des_notes")
       (setq sql-server "localhost")
       (define-key comint-mode-map [mouse-3] 'comint-insert-input)
       )
   #+END_SRC

   Connexion acilitée, toujours avec la commande ~M-x sql-mysql~ et dorénavant il ne reste plus qu'à saisir le mot de passe utilisateur (en l'occurrence: ~gestionnaire~); le reste étant renseigné à l'avance.

** Mots clés automatiquement en majuscule

   SQLUP-MODE permet d'écrire les mots clés SQL en majuscule.

   Les lignes suivantes sont  à placer dans le fichier ~init.el~:

   #+NAME: sqlup
   #+ATTR_LATEX: :options frame=single, label = \textrm{\textbf{elisp}},  labelposition = topline, samepage = t
   #+BEGIN_SRC elisp
     (use-package sqlup-mode
       :ensure t
       :config
       (add-hook 'sql-mode-hook 'sqlup-mode)
       (add-hook 'sql-interactive-mode-hook 'sqlup-mode)
       (add-hook 'redis-mode-hook 'sqlup-mode)
       )
   #+END_SRC

** Autocompletion

   #+NAME: sqlup
   #+ATTR_LATEX: :options frame=single, label = \textrm{\textbf{elisp}},  labelposition = topline, samepage = t
   #+BEGIN_SRC elisp
     ;;; SQL COMPLETION
     ;; put the root password in  ~/.emacs.d/lisp/mysql.el
     (require 'sql-completion)
     (setq sql-interactive-mode-hook
           (lambda ()
             (define-key sql-interactive-mode-map "\t"
               'comint-dynamic-complete)
             (sql-mysql-completion-init)))

   #+END_SRC


* Exécuter un script sql

  Il faut déclarer le fichier SQL comme source:

   #+NAME: source
   #+ATTR_LATEX: :options frame=single, label = \textrm{\textbf{sql}},  labelposition = topline, samepage = t
  #+BEGIN_SRC sql
    source path_to/the/script_file.sql
  #+END_SRC

  Par exemple:

  #+NAME: sourceexemple
  #+ATTR_LATEX: :options frame=single, label = \textrm{\textbf{sql}},  labelposition = topline, samepage = t
  #+BEGIN_SRC sql
    SOURCE ./initdb_gestiondesnotes.SQL
  #+END_SRC


* Python tkinter table widget for displaying tabular data

** installation
  #+BEGIN_SRC shell
    pip install tksheet
  #+END_SRC

** source
  https://github.com/ragardner/tksheet

** paramètres
   https://github.com/ragardner/tksheet/blob/master/DOCUMENTATION.md

** fonctions
   https://github.com/ragardner/tksheet/blob/master/tksheet/_tksheet.py


* Fonctionnalités  et Modèle Conceptuel des Données (MCD)

Les fonctionnalités attendues sont les suivantes :

** Ajout de discipline ;

   Seuls les utilisateurs ayant le statut (= rôle au sens sql) de *gestionnaire*  sont habilités à ajouter des disciplines.

   - 1 gestionnaire peut ajouter une ou plusieurs disciplines
   - 1 discipline peut être ajoutée par 1 gestionnaire 

#+BEGIN_SRC ditaa :file MCD displines.png

+-------------+     1..n     /------------\       1      +------------+
+gestionnaires+--------------+ajouter cYEL+--------------+disciplines +
+-------------+              \------------/              +------------+
   

#+END_SRC

#+RESULTS:
[[file:MCD displines.png]]


** Ajout d'enseignants ;
** Ajout d'élèves ;
** Créer les classes chaque année pour chaque niveau ;
** Affecter les notes d'une discipline donnée par un professeur à un élève ;
** Calculer les moyennes et autres statistiques liées aux notes.


#+begin_src ditaa :file some_filename.png 


    +-----------+        +---------+  
    |    PLC    |        |         |                
    |  Network  +<------>+   PLC   +<---=---------+ 
    |    cRED   |        |  c707   |              | 
    +-----------+        +----+----+              | 
                              ^                   | 
                              |                   | 
                              |  +----------------|-----------------+
                              |  |                |                 |
                              v  v                v                 v
      +----------+       +----+--+--+      +-------+---+      +-----+-----+       Windows clients
      |          |       |          |      |           |      |           |      +----+      +----+
      | Database +<----->+  Shared  +<---->+ Executive +<-=-->+ Operator  +<---->|cYEL| . . .|cYEL|
      |   c707   |       |  Memory  |      |   c707    |      | Server    |      |    |      |    |
      +--+----+--+       |{d} cGRE  |      +------+----+      |   c707    |      +----+      +----+
         ^    ^          +----------+             ^           +-------+---+
         |    |                                   |                        
         |    +--------=--------------------------+                    
         v                                                             
+--------+--------+                                                         
|                 |                                                         
| Millwide System |            -------- Data ---------                      
| cBLU            |            --=----- Signals ---=--                      
+-----------------+





#+end_src

#+RESULTS:
[[file:some_filename.png]]
 




#+BEGIN_SRC ditaa :file foo.png
  +-------+
  | Hello |
  +-------+
#+END_SRC

#+RESULTS:
[[file:foo.png]]
